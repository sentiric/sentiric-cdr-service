# docker-compose.prod.yml
# Service Üretim ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}


services:
  # [core-service]: Çekirdek Servisler ve Kütüphaneler (Core Layer)
  # --------------------------------------------------
  cdr-service:
    image: ghcr.io/sentiric/sentiric-cdr-service:${TAG:-latest}
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "12050:${CDR_SERVICE_HTTP_PORT:-12050}"
      - "12051:${CDR_SERVICE_GRPC_PORT:-12051}"
      - "12052:${CDR_SERVICE_METRICS_PORT:-12052}"                 
    networks:
      sentiric-net:
        ipv4_address: ${CDR_SERVICE_IPV4_ADDRESS}
    restart: always
    # depends_on: { 
    #   postgres: { condition: service_healthy },
    #   rabbitmq: { condition: service_healthy },
    #   user-service: { condition: service_healthy },
    # }     
